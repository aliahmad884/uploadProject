"use strict";(()=>{var e={};e.id=5,e.ids=[5],e.modules={8013:e=>{e.exports=require("mongodb")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},2314:(e,t,o)=>{o.r(t),o.d(t,{originalPathname:()=>c,patchFetch:()=>m,requestAsyncStorage:()=>d,routeModule:()=>p,serverHooks:()=>g,staticGenerationAsyncStorage:()=>u});var r={};o.r(r),o.d(r,{POST:()=>l});var a=o(9303),n=o(8716),s=o(670);let i=new(o(8013)).MongoClient(process.env.URI_String);async function l(e){try{let t=await e.json();await i.connect();let o=i.db(process.env.DataBase),r=o.collection("Blogs"),a=await r.find().toArray(),n=o.collection("ClipBoard"),s=await n.findOne();if(s&&s.blogId){let e=a.find(e=>e.id===s.blogId);return new Response(JSON.stringify({msg:"Request Recieved",data:e,blogId:`BlogID from readBlog route: ${t}`}),{status:200,headers:{"Content-Type":"application/json"}})}return new Response(JSON.stringify({msg:"Request Not valid",blogId:`BlogID from readBlog route: ${t}`}),{status:200,headers:{"Content-Type":"application/json"}})}catch(e){return console.log(e),new Response(JSON.stringify({msg:"Internel Server Error"}),{status:500,headers:{"Content-Type":"application/json"}})}}let p=new a.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/blog/readBlog/route",pathname:"/api/blog/readBlog",filename:"route",bundlePath:"app/api/blog/readBlog/route"},resolvedPagePath:"/home/aldor/Code_Space/uploadProject/app/api/blog/readBlog/route.js",nextConfigOutput:"",userland:r}),{requestAsyncStorage:d,staticGenerationAsyncStorage:u,serverHooks:g}=p,c="/api/blog/readBlog/route";function m(){return(0,s.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:u})}},9303:(e,t,o)=>{e.exports=o(517)}};var t=require("../../../../webpack-runtime.js");t.C(e);var o=e=>t(t.s=e),r=t.X(0,[948],()=>o(2314));module.exports=r})();